(defvar *tests* nil)
(load "test-macro.lisp")
(loop for el in (cdr *posix-argv*) do (load el))
; (print *tests*)
(defun huh (thing) (format t "~A~%" thing) thing)
(fresh-line)
(defun emoji->bool (sym) (eq sym 'âœ…))
(if (reduce (lambda (acc el) 
                (format t "~A ~A~%" (car el) (cadr el))
                (emoji->bool (cadr el)))
            (reverse *tests*)
            :initial-value 't)
    (progn (format t "~A~%" "ALL PASSED")
           (sb-ext:exit :code 0))
    (progn (format t "~A~%" "TESTS FAILED")
           (sb-ext:exit :code 1) ))